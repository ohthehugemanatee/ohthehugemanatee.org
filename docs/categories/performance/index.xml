<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>performance on Oh The Huge Manatee!</title>
    <link>https://ohthehugemanatee.org/categories/performance/</link>
    <description>Recent content in performance on Oh The Huge Manatee!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Jun 2014 22:21:01 +0000</lastBuildDate><atom:link href="https://ohthehugemanatee.org/categories/performance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Authenticated User Caching Concepts in Drupal 7</title>
      <link>https://ohthehugemanatee.org/blog/2014/06/09/authenticated-user-caching-in-drupal/</link>
      <pubDate>Mon, 09 Jun 2014 22:21:01 +0000</pubDate>
      
      <guid>https://ohthehugemanatee.org/blog/2014/06/09/authenticated-user-caching-in-drupal/</guid>
      <description>Drupal has a wide variety of highly effective solutions for caching anonymous user content. The typical setup is APC, Memcached or Redis, and Varnish in front, and this can easily serve thousands of concurrent anonymous users. There is excellent documentation out there discussing this kind of simple caching.
But what about authenticated users? You can cache elements of the page using a method like Render cache, Entity Cache, or Views Content Cache.</description>
    </item>
    
  </channel>
</rss>
